#########################################################################
# Â© Ronan LE MEILLAT 2023
# released under the GPLv3 terms
#########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hcf-coder.fullname" . }}
  labels:
    {{- include "hcf-coder.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: {{ .Values.image.updateStrategy }}
  selector:
    matchLabels:
      {{- include "hcf-coder.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hcf-coder.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hcf-coder.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: REMOTEHOST
            value: {{ .Values.remoteHost | quote }}
          - name: REMOTEPORT
            value: {{ .Values.remotePort | quote }}
          - name: REMOTEDIR
            value: {{ .Values.remotePath | quote }}
          - name: APPNAME
            value: {{ .Values.publicName | quote }}
          - name: GET_KUBECONFIG_ONE
            valueFrom:
              secretKeyRef:
                key: get-kubeconfig-one
                name: get-kubeconfig
          - name: GET_KUBECONFIG_TWO
            valueFrom:
              secretKeyRef:
                key: get-kubeconfig-two
                name: get-kubeconfig
          {{- if not .Values.minimal }}
          securityContext:
              privileged: true
              capabilities:
                add:
          {{- end }}
{{ if .Values.DEBUG }}
          command: ["/bin/sh","-c"]
          args: ["sleep infinity"]
{{ end }}
          ports:
          - containerPort: {{ .Values.service.port }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.port }}
          initialDelaySeconds: 300 # 5 minutes because it takes time to download the image wich is 2.5GB
          periodSeconds: 20
          {{- end }}
          {{ if .Values.persistence.enabled}}
          volumeMounts:
            - name: hcf-coder-storage
              mountPath: /home/coder
            {{ if .Values.dockersock }}
            - name: dockersock
              mountPath: /var/run/docker.sock
              {{ end }}
          {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.persistence.enabled}}
        - name: hcf-coder-storage
          persistentVolumeClaim:
            claimName: pvc-hcf-coder
      {{- end -}}  
        {{ if .Values.dockersock }}
        - name: dockersock
          hostPath:
            path: {{ .Values.dockersock }}  #or the containerd socket
        {{ end }}
      {{ if .Values.dockersock }}
      securityContext:
          privileged: true # Required if you're enabling docker
      {{ end }}
